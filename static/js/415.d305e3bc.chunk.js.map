{"version":3,"file":"static/js/415.d305e3bc.chunk.js","mappings":"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","sources":["pages/products.tsx"],"sourcesContent":["\n\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\ninterface Product {\n  id: string;\n  name: string;\n  price: number;\n  image: string;\n  description?: string;\n}\n\nconst Products: React.FC = () => {\n  const [products, setProducts] = useState<Product[]>([]);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    // Fetching products (mock data for now)\n    const fetchedProducts: Product[] = [\n      { id: '1', name: 'Chyavanprash', price: 30, image: '/static/images/chyavanprash.jpg', description: 'A traditional herbal jam with numerous health benefits.' },\n      { id: '2', name: 'Moringa Powder', price: 45, image: '/static/images/moringa_powder.jpg', description: 'A traditional herbal jam with numerous health benefits.' },\n      { id: '3', name: 'Coconut Oil', price: 10, image: '/static/images/coconut-oil.png', description: 'A traditional herbal jam with numerous health benefits.' },\n      { id: '4', name: 'Hand Soap', price: 5, image: '/static/images/hand-soap.png', description: 'A traditional herbal jam with numerous health benefits.' },\n      { id: '5', name: 'Shilajit', price: 50, image: '/static/images/shilajit.jpg', description: 'A traditional herbal jam with numerous health benefits.' },\n      { id: '6', name: 'Chiuri Honey', price: 30, image: '/static/images/native_chiuri_honey.jpg', description: 'A traditional herbal jam with numerous health benefits.' },\n      { id: '7', name: 'Multigrain Satu', price: 20, image: '/static/images/multigrain_satu.jpg', description: 'A traditional herbal jam with numerous health benefits.' },\n      { id: '8', name: 'Moringa Tea Leaves', price: 10, image: '/static/images/moringa_leaves_tea.jpg', description: 'A traditional herbal jam with numerous health benefits.' },\n      { id: '9', name: 'Chia Seeds', price: 20, image: '/static/images/chia_seeds.jpg', description: 'A traditional herbal jam with numerous health benefits.' },\n      { id: '10', name: 'Chamomile ', price: 15, image: '/static/images/chamomile.jpg', description: 'A traditional herbal jam with numerous health benefits.' },\n      { id: '11', name: 'Bee Pollen', price: 25, image: '/static/images/bee_pollen.jpg', description: 'A traditional herbal jam with numerous health benefits.' },\n    ];\n    setProducts(fetchedProducts);\n  }, []);\n\n  const addToCart = (product: Product, quantity: number) => {\n    const cart = JSON.parse(localStorage.getItem('cart') || '[]');\n    const existing = cart.find((item: Product) => item.id === product.id);\n    if (existing) {\n      existing.quantity += quantity;\n    } else {\n      cart.push({ ...product, quantity });\n    }\n    localStorage.setItem('cart', JSON.stringify(cart));\n    window.dispatchEvent(new Event('cartUpdated'));\n  \n    // Animation Logic\n    const img = document.getElementById(`product-img-${product.id}`);\n    if (img) {\n      const clone = img.cloneNode(true) as HTMLImageElement;\n      const rect = img.getBoundingClientRect();\n  \n      clone.style.position = 'fixed';\n      clone.style.top = `${rect.top}px`;\n      clone.style.left = `${rect.left}px`;\n      clone.style.width = `${img.offsetWidth}px`;\n      clone.style.height = `${img.offsetHeight}px`;\n      clone.style.zIndex = '1000';\n      clone.classList.add('animate-flyToCart');\n      document.body.appendChild(clone);\n  \n      clone.addEventListener('animationend', () => {\n        clone.remove();\n      });\n    }\n  };\n\n  return (\n    <div className=\"p-6 bg-gray-100\">\n      <h1 className=\"text-3xl font-bold text-center mb-6\">Our Products</h1>\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6\">\n        {products.map((product) => (\n          <div\n            key={product.id}\n            className=\"bg-white shadow-md rounded-md p-4 flex flex-col items-center cursor-pointer\"\n            onClick={() => navigate(`/product/${product.id}`, { state: { product } })}\n          >\n            <img\n              id={`product-img-${product.id}`} // Make sure to add the ID to trigger the animation\n              src={product.image}\n              alt={product.name}\n              className=\"w-full h-48 object-cover rounded-md\"\n            />\n            <h3 className=\"text-lg font-semibold mt-4\">{product.name}</h3>\n            <p className=\"text-green-600 font-bold mt-2\">${product.price}</p>\n            <div className=\"flex items-center gap-2 mt-4\">\n              <input\n                type=\"number\"\n                min=\"1\"\n                defaultValue=\"1\"\n                id={`quantity-${product.id}`}\n                className=\"w-16 p-1 border rounded-md text-center\"\n              />\n              <button\n                onClick={(e) => {\n                  e.stopPropagation();\n                  const quantity = parseInt(\n                    (document.getElementById(`quantity-${product.id}`) as HTMLInputElement)?.value || '1'\n                  );\n                  addToCart(product, quantity); // Pass quantity here\n                }}\n                className=\"bg-green-500 text-white px-4 py-2 rounded-md hover:bg-green-600\"\n              >\n                Add to Cart\n              </button>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Products;\n"],"names":["Products","products","setProducts","useState","navigate","useNavigate","useEffect","id","name","price","image","description","_jsxs","className","children","_jsx","map","product","onClick","concat","state","src","alt","type","min","defaultValue","e","_document$getElementB","stopPropagation","quantity","parseInt","document","getElementById","value","addToCart","cart","JSON","parse","localStorage","getItem","existing","find","item","push","_objectSpread","setItem","stringify","window","dispatchEvent","Event","img","clone","cloneNode","rect","getBoundingClientRect","style","position","top","left","width","offsetWidth","height","offsetHeight","zIndex","classList","add","body","appendChild","addEventListener","remove"],"sourceRoot":""}